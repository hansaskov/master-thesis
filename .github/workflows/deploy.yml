name: deploy
on:
  push:
    branches:
      - main
      - preview

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.ref_name == 'main' && 'production' || 'preview' }}
    env:
      PROD: true
      COMPOSE_PROJECT_NAME: ${{ github.ref_name }}
      COMPOSE_PROFILES: stateless, stateful, migrate
      DOCKER_HOST: ssh://admin@${{ secrets.SERVER_IP }}
      SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      INTERFACE_FQDN: ${{ vars.INTERFACE_FQDN }}
      MICROSOFT_TENANT_ID: ${{ vars.MICROSOFT_TENANT_ID }}
      MICROSOFT_CLIENT_ID: ${{ secrets.MICROSOFT_CLIENT_ID }}
      MICROSOFT_CLIENT_SECRET: ${{ secrets.MICROSOFT_CLIENT_SECRET }}
      POSTGRES_DB: ${{ vars.POSTGRES_DB }}
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      DATABASE_URL: postgres://${{ secrets.POSTGRES_USER }}:${{ secrets.POSTGRES_PASSWORD }}@timescaledb:5432/${{ vars.POSTGRES_DB }}
      PORTAINER_FQDN: ${{ vars.PORTAINER_FQDN }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Which branch?
        run: echo "${{ github.ref_name }}"
      
      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          echo -e "Host *\n\tStrictHostKeyChecking no\n" >> ~/.ssh/config
      
      - name: Docker prune
        run: docker system prune --all --force --filter "until=36h"
      
      - name: Deploy caddy
        run: docker compose --profile proxy -p proxy up -d
      
      - name: Deploy docker compose
        run: docker compose -f compose.yaml --profile stateful --profile stateless --profile migrate up --build -d --wait
      
      - name: Deploy monitoring
        run: docker compose --profile monitor -p monitor up -d