name: Build and test images

on:
  push:
    branches:
      - preview

jobs:
  check:
    runs-on: ubuntu-latest
    steps: 
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v2
      - name: Install dependencies
        run: bun install
      - name: Check typescript errors (Backend)
        working-directory: services/backend
        run: bun check
      - name: Check typescript errors (Frontend)
        working-directory: services/frontend
        run: bun check

  build:
    runs-on: ubuntu-latest
    steps: 
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v2
      - name: Install dependencies
        run: bun install
      - name: Build Docker Images
        run: docker compose -f compose.yaml build

  unit-test:
    runs-on: ubuntu-latest
    steps: 
      - uses: actions/checkout@v4
      - name: Copy env file
        run: cp .env.example .env
      - name: Compose up
        run: docker compose up --build -d
      - name: Wait 2 sec
        run: sleep 2
      - name: Unit test
        run: docker compose exec backend bun test
        
  deploy:
    runs-on: ubuntu-latest
    environment: preview
    env:
      PROD: true
      COMPOSE_PROJECT_NAME: thesis-preview
      DOCKER_HOST: ssh://admin@${{ secrets.SERVER_IP }}
      INTERFACE_FQDN: ${{ vars.INTERFACE_FQDN }}
      MICROSOFT_TENANT_ID: ${{ secrets.MICROSOFT_TENANT_ID }}
      MICROSOFT_CLIENT_ID: ${{ secrets.MICROSOFT_CLIENT_ID }}
      MICROSOFT_CLIENT_SECRET:  ${{ secrets.MICROSOFT_CLIENT_SECRET }}
      MICROSOFT_REDIRECT_URI: ${{ vars.MICROSOFT_REDIRECT_URI }}
      POSTGRES_DB: ${{ vars.POSTGRES_DB }}
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_USER }}
      DATABASE_URL: postgres://${{ secrets.POSTGRES_USER }}:${{ secrets.POSTGRES_USER }}@timescaledb:5432/${{ vars.POSTGRES_DB }}
      SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
    steps:

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          echo -e "Host *\n\tStrictHostKeyChecking no\n" >> ~/.ssh/config
      
      - name: Prune old containers
        run: docker container prune -f --filter "until=12h"

      - name: Prune old images
        run: docker image prune -a -f --filter "until=12h"

      - name: Prune unused volumes
        run: docker volume prune -f

      - name: Prune unused networks
        run: docker network prune -f --filter "until=12h"

      - name: Deploy caddy
        run: docker compose --profile proxy -p proxy up -d

      - name: Deploy docker compose
        run: docker compose -f compose.yaml --profile stateful --profile stateless --profile migrate  up --build  -d


