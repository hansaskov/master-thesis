include: 
  - ./services/caddy/compose.yaml
  - ./services/timescaledb/compose.yaml
  - ./services/portainer/compose.yaml

services:
  frontend: 
    profiles: [stateless]
    restart: unless-stopped
    build: 
      context: .
      dockerfile: ./services/frontend/dockerfile
    networks:
      - proxy-network
    labels:
      caddy: "${INTERFACE_FQDN}"
      caddy.encode: zstd gzip
      caddy.reverse_proxy: "{{upstreams 5173}}"

  backend:
    profiles: [stateless]
    restart: unless-stopped
    ports:
      - "3000:3000"
    build: 
      context: .
      dockerfile: ./services/backend/Dockerfile
    networks:
      - default
      - proxy-network
    environment:
      - IS_TEST
      - NUM_CLUSTER
      - INTERFACE_FQDN=${INTERFACE_FQDN}
      - DATABASE_URL=${DATABASE_URL}
      - MICROSOFT_TENANT_ID=${MICROSOFT_TENANT_ID}
      - MICROSOFT_CLIENT_ID=${MICROSOFT_CLIENT_ID}
      - MICROSOFT_CLIENT_SECRET=${MICROSOFT_CLIENT_SECRET}
      - RESEND_CLIENT_SECRET=${RESEND_CLIENT_SECRET}
      - PROD=${PROD}
      - S3_ACCESS_KEY_ID=${S3_ACCESS_KEY_ID}
      - S3_SECRET_ACCESS_KEY=${S3_SECRET_ACCESS_KEY}
      - S3_BUCKET=${S3_BUCKET}
      - S3_ENDPOINT=${S3_ENDPOINT}
    labels:
      caddy: "${INTERFACE_FQDN}"
      caddy.handle_0: /api/*
      caddy.handle_0.reverse_proxy: "{{upstreams 3000}}"
      caddy.handle_1: /.well-known/*
      caddy.handle_1.reverse_proxy: "{{upstreams 3000}}"
    depends_on:
      timescaledb: 
        condition: service_healthy

## Apply migration at startup
  migrate:
    profiles: [migrate]   
    build:
      context: .
      dockerfile: ./services/backend/develop.dockerfile
    command: bun db:migrate
    environment:
      - DATABASE_URL=${DATABASE_URL}
    depends_on:
      timescaledb: 
        condition: service_healthy
