services:

  ## The entrypoint of our app. This service will proxy requests to all other services. 
  caddy:
    image: lucaslorentz/caddy-docker-proxy:ci-alpine
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
      - "443:443/udp"
    volumes:
      - caddy_data:/data
      - caddy_config:/config
      - /var/run/docker.sock:/var/run/docker.sock

  ## The frontend service will build the frontend and then store the build output in volume bind.
  frontend: 
    build:
      context: services/frontend
      dockerfile: Dockerfile
    labels:
      caddy: "${INTERFACE_FQDN}"
      caddy.encode: zstd gzip
      caddy.reverse_proxy: "{{upstreams 8080}}"
    develop:
      watch:
        - action: rebuild
          path: ./services/frontend

  ## The Backend will host our REST JSON api. Our spa will use this for data communication.
  backend: 
    build:
      context: services/backend
      dockerfile: Dockerfile
    environment:
      - DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@timescaledb:5432/${POSTGRES_DB}
    labels:
      caddy: "${INTERFACE_FQDN}"
      caddy.handle: /api/*
      caddy.handle.reverse_proxy: "{{upstreams 3000}}"
    depends_on:
      - timescaledb
    develop:
      watch:
        - action: rebuild
          path: ./services/backend

  ## The ingestion server will allow vision systems to send data to the db. 
  ingest:
    build:
      context: services/ingest
      dockerfile: Dockerfile
    ports:
      - "50051:50051"
    environment:
      - DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@timescaledb:5432/${POSTGRES_DB}
    labels:
      caddy: "${INGEST_SERVER_FQDN}"
      caddy.reverse_proxy: "{{upstreams 50051}}"
    depends_on:
      - timescaledb

  ## A postgres database optimised for timeseries data
  timescaledb:
    image: timescale/timescaledb:latest-pg16
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - timescaledb_data:/var/lib/postgresql/data

volumes:
  caddy_data:
  caddy_config:
  timescaledb_data:
